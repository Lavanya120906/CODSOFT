import pandas as pd

# Sample dataset
data = {
    'user_id': [1, 1, 1, 2, 2, 3, 3, 4, 4, 4],
    'movie_id': [1, 2, 3, 1, 4, 2, 3, 1, 2, 4],
    'rating': [5, 3, 4, 4, 5, 4, 2, 3, 5, 4]
}

# Convert to DataFrame
df = pd.DataFrame(data)

# Display the dataset
print("Sample Dataset:\n", df)
from sklearn.metrics.pairwise import cosine_similarity

# Create a user-movie matrix
user_movie_matrix = df.pivot_table(index='user_id', columns='movie_id', values='rating')

# Fill NaN with 0 (assume missing ratings mean no rating given)
user_movie_matrix = user_movie_matrix.fillna(0)

# Calculate cosine similarity between users
user_similarity = cosine_similarity(user_movie_matrix)
user_similarity_df = pd.DataFrame(user_similarity, index=user_movie_matrix.index, columns=user_movie_matrix.index)

# Display the user similarity matrix
print("User Similarity Matrix:\n", user_similarity_df)
def get_similar_users(user_id, n=2):
    similar_users = user_similarity_df[user_id].sort_values(ascending=False).index[1:n+1]
    return similar_users

def recommend_movies(user_id, n_recommendations=3):
    similar_users = get_similar_users(user_id)
    similar_users_ratings = user_movie_matrix.loc[similar_users]
    user_ratings = user_movie_matrix.loc[user_id]

    recommendations = similar_users_ratings.mean(axis=0)
    recommendations = recommendations[user_ratings == 0]
    recommendations = recommendations.sort_values(ascending=False).head(n_recommendations)
    return recommendations.index.tolist()

# Example usage
user_id = 1
recommended_movies = recommend_movies(user_id)
print(f"Recommended movies for user {user_id}: {recommended_movies}")
